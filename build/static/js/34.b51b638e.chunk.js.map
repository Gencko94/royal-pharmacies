{"version":3,"sources":["components/TrackOrder/GuestOrders.js","pages/TrackOrder.js"],"names":["GuestOrders","orders","formatMessage","useIntl","React","useState","isOpen","setIsOpen","selectedOrder","setSelectedOrder","childVariants","hidden","y","opacity","visible","length","className","style","height","id","div","layout","variants","transition","staggerChildren","when","initial","animate","map","order","onClick","key","status","resolveStatus","moment","created_at","format","payment","payment_method","src","knet","alt","mastercard","amex","cod","Content","locale","deliveryCountry","useContext","DataProvider","useQuery","getSingleGuestOrder","retry","refetchOnWindowFocus","data","isLoading","type","color","width","exited","exit","address","customer","name","email","mobile","marked_address","userTyped_address","apartment_house_number","building_tower_number","addition_direction","lat","lng","process","items","orderItem","i","to","product","slug","translation","title","qty","fontWeight","price","toFixed","currency","symbol","subtotal","shipping_cost","coupon_cost","total","options","value","label","PhoneNumberCustomInput","countryCode","setCountryCode","props","useField","field","meta","htmlFor","display","gridTemplateColumns","gap","isSearchable","onChange","styles","dropdownIndicator","provided","padding","valueContainer","onBlur","e","error","touched","TrackOrder","settings","errorOpen","setErrorOpen","errorMessage","setErrorMessage","showGuestOrders","setShowGuestOrders","setOrders","validationSchema","Yup","phoneNumber","matches","required","Layout","ErrorSnackbar","message","closeFunction","store_logo_color","initialValues","onSubmit","values","actions","a","trackGuestOrder","res","setSubmitting","response","setErrors","handleSubmit","isSubmitting","disabled"],"mappings":"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","file":"static/js/34.b51b638e.chunk.js","sourcesContent":["import { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { DataProvider } from '../../contexts/DataContext';\r\nimport knet from '../../assets/paymentLogos/knet.png';\r\nimport mastercard from '../../assets/paymentLogos/mastercard.png';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport cod from '../../assets/paymentLogos/cod.png';\r\nimport amex from '../../assets/paymentLogos/amex.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from 'react-query';\r\nimport { getSingleGuestOrder } from '../../Queries/Queries';\r\nimport moment from 'moment';\r\nexport default function GuestOrders({ orders }) {\r\n  const { formatMessage } = useIntl();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [selectedOrder, setSelectedOrder] = React.useState(null);\r\n  const resolveStatus = status => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center rounded  px-3 py-2  font-semibold bg-green-700  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-completed' })}</h1>\r\n          </div>\r\n        );\r\n\r\n      case 'canceled':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center rounded px-3 py-2 font-semibold bg-main-color  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-cancelled' })}</h1>\r\n          </div>\r\n        );\r\n      case 'pending':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark  flex items-center rounded  px-3 py-2  font-semibold bg-yellow-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-pending' })}</h1>\r\n          </div>\r\n        );\r\n      case 'delivery':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark  flex items-center rounded  px-3 py-2 font-semibold bg-blue-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-delivery' })}</h1>\r\n          </div>\r\n        );\r\n      case 'waiting_for_payment':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center  rounded px-3 py-2 font-semibold bg-yellow-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">\r\n              {formatMessage({ id: 'order-waiting-for-payment' })}\r\n            </h1>\r\n          </div>\r\n        );\r\n      case 'confirmed':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center rounded px-3 py-2  font-semibold bg-blue-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-confirmed' })}</h1>\r\n          </div>\r\n        );\r\n      case 'new':\r\n        return (\r\n          <div\r\n            className={`text-body-text-dark px-3 py-2 rounded  font-semibold flex items-center  bg-blue-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-new' })}</h1>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const resolvePayment = payment => {\r\n    if (payment === 'knet') {\r\n      return (\r\n        <div\r\n          className={`  flex  items-center justify-start  p-2 font-semibold`}\r\n        >\r\n          <img src={knet} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">K-net</div>\r\n        </div>\r\n      );\r\n    }\r\n    if (payment === 'credit') {\r\n      return (\r\n        <div\r\n          className={`  flex  items-center justify-start  p-2 font-semibold`}\r\n        >\r\n          <img src={mastercard} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">Credit Card</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (payment === 'amex') {\r\n      return (\r\n        <div className={` flex  items-center justify-start  p-2 font-semibold`}>\r\n          <img src={amex} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">American Express</div>\r\n        </div>\r\n      );\r\n    }\r\n    if (payment === 'cod') {\r\n      return (\r\n        <div\r\n          className={`  flex  items-center justify-start  p-2 font-semibold`}\r\n        >\r\n          <img src={cod} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">\r\n            {formatMessage({ id: 'cash-on-delivery' })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const containerVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n        when: 'beforeChildren',\r\n      },\r\n    },\r\n  };\r\n  const childVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: { y: 0, opacity: 1 },\r\n  };\r\n  if (orders.length === 0) {\r\n    return (\r\n      <div\r\n        className=\"flex justify-center items-center\"\r\n        style={{\r\n          height: 'calc(100vh - 140px)',\r\n        }}\r\n      >\r\n        {formatMessage({ id: 'no-orders-placed' })}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <AnimateSharedLayout>\r\n      <motion.div\r\n        layout\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        className=\" guest-orders-grid__desktop mb-6\"\r\n      >\r\n        <div className=\"max-h-full p-3 overflow-y-auto\">\r\n          {orders.map(order => {\r\n            return (\r\n              <motion.div\r\n                layout\r\n                onClick={() => {\r\n                  setSelectedOrder(order.id);\r\n                  setIsOpen(true);\r\n                }}\r\n                key={order.id}\r\n                variants={childVariants}\r\n                className={`mb-3  mx-1 cursor-pointer w-full rounded-lg ${\r\n                  selectedOrder === order.id ? 'bg-gray-800' : 'bg-gray-900'\r\n                }  hover:bg-gray-800 transition duration-200 text-main-text`}\r\n              >\r\n                {resolveStatus(order.status)}\r\n                <div className=\"p-3\">\r\n                  <div className=\"flex items-center font-bold\">\r\n                    <h1>{formatMessage({ id: 'order-number' })}</h1>\r\n                    <h1 className=\"mx-1\">{order.id}</h1>\r\n                  </div>\r\n                  <div className=\"flex items-center font-bold\">\r\n                    <h1>{formatMessage({ id: 'order-date' })}</h1>\r\n                    <h1 className=\"mx-1\">\r\n                      {moment(order.created_at).format('DD/MM/YYYY - HH:MM')}\r\n                    </h1>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <h1 className=\"text-gray-600\">\r\n                      {order.status === 'completed'\r\n                        ? formatMessage({ id: 'delivery-status' })\r\n                        : formatMessage({ id: 'expected-delivery' })}{' '}\r\n                      :\r\n                    </h1>\r\n                    <h1 className=\"mx-1\">\r\n                      {order.status === 'completed'\r\n                        ? formatMessage({ id: 'delivered' })\r\n                        : 'Soon'}\r\n                    </h1>\r\n                  </div>\r\n\r\n                  <div className=\"text-sm\">\r\n                    <h1 className=\"text-gray-600\">\r\n                      {formatMessage({ id: 'payment-method' })} :\r\n                    </h1>\r\n                    {resolvePayment(order.payment_method)}\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"shadow rounded-lg max-h-full overflow-y-auto\">\r\n          {!selectedOrder && (\r\n            <div className=\"text-2xl p-3 h-full flex items-center justify-center font-semibold\">\r\n              {formatMessage({ id: 'select-order-to-display' })}\r\n            </div>\r\n          )}\r\n          <AnimatePresence>\r\n            {isOpen && <Content id={selectedOrder} />}\r\n          </AnimatePresence>\r\n        </div>\r\n      </motion.div>\r\n    </AnimateSharedLayout>\r\n  );\r\n}\r\nconst Content = ({ id }) => {\r\n  const { locale, formatMessage } = useIntl();\r\n  const { deliveryCountry } = React.useContext(DataProvider);\r\n  const containerVariants = {\r\n    hidden: {\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      opacity: 1,\r\n    },\r\n    exited: {\r\n      opacity: 0,\r\n    },\r\n  };\r\n  const { data, isLoading } = useQuery(\r\n    ['single-guest-order', id],\r\n    getSingleGuestOrder,\r\n    { retry: true, refetchOnWindowFocus: false }\r\n  );\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex h-full justify-center items-center\">\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#b72b2b\"\r\n          height={40}\r\n          width={40}\r\n          visible={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exited\"\r\n    >\r\n      <div className=\"p-2 border-b\">\r\n        <h1 className=\"font-bold text-xl\">\r\n          {formatMessage({ id: 'delivery' })}\r\n        </h1>\r\n      </div>\r\n      <motion.div className=\"flex justify-between p-2\" layout>\r\n        <div>\r\n          <div className=\" font-semibold\">\r\n            <h1 className=\"text-gray-700 font-bold text-lg\">\r\n              {formatMessage({\r\n                id: 'full-name',\r\n              })}\r\n            </h1>\r\n            <h1>{data.address.customer.name}</h1>\r\n          </div>\r\n          {data.address.customer.email && (\r\n            <div className=\" font-semibold\">\r\n              <h1 className=\"text-gray-700 font-bold text-lg\">\r\n                {formatMessage({\r\n                  id: 'full-name',\r\n                })}\r\n              </h1>\r\n              <h1>{data.address.customer.email}</h1>\r\n            </div>\r\n          )}\r\n          <div className=\" font-semibold\">\r\n            <h1 className=\"text-gray-700 font-bold text-lg\">\r\n              {formatMessage({\r\n                id: 'phone-number',\r\n              })}\r\n            </h1>\r\n            <h1>{data.address.customer.mobile}</h1>\r\n          </div>\r\n          <div className=\" font-semibold\">\r\n            <h1 className=\"text-gray-700 font-bold text-lg\">\r\n              {formatMessage({\r\n                id: 'location',\r\n              })}\r\n            </h1>\r\n            <h1>{`${\r\n              data.address.type === 'map'\r\n                ? data.address.marked_address\r\n                : data.address.userTyped_address\r\n            }`}</h1>\r\n          </div>\r\n          <div className=\"font-semibold\">\r\n            <h1 className=\"text-gray-700 text-lg font-bold\">\r\n              {formatMessage({\r\n                id: 'maps-detailed-address-apartment',\r\n              })}\r\n            </h1>\r\n            <h1>{data.address.apartment_house_number}</h1>\r\n          </div>\r\n          {data.address.building_tower_number && (\r\n            <div className=\"font-semibold\">\r\n              <h1 className=\"text-gray-800  font-bold\">\r\n                {formatMessage({\r\n                  id: 'maps-detailed-address-building',\r\n                })}\r\n              </h1>\r\n              <h1>{data.address.building_tower_number}</h1>\r\n            </div>\r\n          )}\r\n          {data.address.addition_direction && (\r\n            <div className=\"font-semibold\">\r\n              <h1 className=\"text-gray-800 font-bold\">\r\n                {formatMessage({\r\n                  id: 'maps-details-extra-details',\r\n                })}\r\n              </h1>\r\n              <h1>{data.address.addition_direction}</h1>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <motion.div layout>\r\n          {data.address.type === 'map' && data.address.lat && (\r\n            <img\r\n              src={`https://maps.googleapis.com/maps/api/staticmap?center=${data.address.lat},${data.address.lng}&zoom=15&size=150x150&\r\n              markers=color:blue%7C${data.address.lat}-${data.address.lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n              alt=\"map\"\r\n            />\r\n          )}\r\n        </motion.div>\r\n      </motion.div>\r\n      <hr className=\"my-4\" />\r\n      <div className=\"p-2 border-b\">\r\n        <h1 className=\"font-bold text-xl\">\r\n          {formatMessage({ id: 'order-receipt' })}\r\n        </h1>\r\n      </div>\r\n      <div className=\"p-2 text-lg\">\r\n        <div className=\"my-orders-items__table-desktop font-semibold text-center mb-3\">\r\n          <h1>#</h1>\r\n          <h1>{formatMessage({ id: 'the-item' })}</h1>\r\n          <h1>{formatMessage({ id: 'quantity' })}</h1>\r\n          <h1>{formatMessage({ id: 'price' })}</h1>\r\n          <h1>{formatMessage({ id: 'total' })}</h1>\r\n        </div>\r\n\r\n        {data.items.map((orderItem, i) => {\r\n          return (\r\n            <div\r\n              key={orderItem.id}\r\n              className=\"my-orders-item-desktop text-base text-center\"\r\n            >\r\n              <div className=\"\">\r\n                <h1 className=\"\">{i + 1}</h1>\r\n              </div>\r\n              <Link\r\n                to={`/${locale}/products/${orderItem.product.slug}/${orderItem.id}`}\r\n                className=\"hover:underline truncate uppercase font-semibold block\"\r\n              >\r\n                {orderItem.product.translation[locale].title}\r\n              </Link>\r\n              <div className=\"\">\r\n                <h1 className=\"\">{orderItem.qty}</h1>\r\n              </div>\r\n              <div style={{ fontWeight: 900 }}>\r\n                <h1 className=\"\">{orderItem.price} </h1>\r\n              </div>\r\n              <div style={{ fontWeight: 900 }} className=\"text-green-700\">\r\n                <h1 className=\"\">\r\n                  {(orderItem.price * orderItem.qty).toFixed(3)}{' '}\r\n                  {deliveryCountry?.currency.translation[locale].symbol}\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <hr className=\"my-3\" />\r\n        <div className=\"my-orders-receipt-summary font-bold\">\r\n          <h1>{formatMessage({ id: 'cart-total' })}</h1>\r\n          <h1 className=\"text-center\">\r\n            {data.subtotal}{' '}\r\n            <span className=\"mx-1\">\r\n              {deliveryCountry?.currency.translation[locale].symbol}\r\n            </span>\r\n          </h1>\r\n          <h1>{formatMessage({ id: 'cart-delivery-cost' })}</h1>\r\n          <h1 className=\"text-center\">\r\n            {data.shipping_cost === '0'\r\n              ? formatMessage({ id: 'cart-free' })\r\n              : data.shipping_cost}{' '}\r\n            <span className=\"mx-1\">\r\n              {deliveryCountry?.currency.translation[locale].symbol}\r\n            </span>\r\n          </h1>\r\n          {data.coupon_cost !== '0.000' && (\r\n            <h1 className=\"mb-2 text-green-700\">\r\n              {formatMessage({ id: 'coupon-sale' })}\r\n            </h1>\r\n          )}\r\n          {data.coupon_cost !== '0.000' && (\r\n            <h1 className=\"mb-2 text-center text-green-700\">\r\n              {data.coupon_cost}\r\n              <span className=\"mx-1\">\r\n                {deliveryCountry?.currency.translation[locale].symbol}\r\n              </span>\r\n            </h1>\r\n          )}\r\n          <h1\r\n            className=\"text-green-700 text-xl font-bold\"\r\n            style={{ fontWeight: 900 }}\r\n          >\r\n            {formatMessage({ id: 'subtotal' })}\r\n          </h1>\r\n          <h1\r\n            className=\"text-green-700 text-lg font-bold text-center\"\r\n            style={{ fontWeight: 900 }}\r\n          >\r\n            {data.total} {deliveryCountry?.currency.translation[locale].symbol}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n","import { Formik, useField } from 'formik';\r\nimport React from 'react';\r\n\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Layout from '../components/Layout';\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\nimport ErrorSnackbar from '../components/ErrorSnackbar';\r\n\r\nimport { DataProvider } from '../contexts/DataContext';\r\nimport { trackGuestOrder } from '../Queries/Queries';\r\nimport GuestOrders from '../components/TrackOrder/GuestOrders';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nconst options = [\r\n  { value: '+965', label: '+965' },\r\n  { value: '+966', label: '+966' },\r\n];\r\nconst PhoneNumberCustomInput = ({\r\n  label,\r\n  value,\r\n  name,\r\n  countryCode,\r\n  setCountryCode,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(name);\r\n  return (\r\n    <div className=\"w-full mb-2 flex flex-col \">\r\n      <label\r\n        htmlFor={name}\r\n        className={`text-sm font-semibold text-gray-800 mb-1`}\r\n      >\r\n        {label}\r\n      </label>\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: '0.5fr 1fr',\r\n          gap: '0.5rem',\r\n        }}\r\n      >\r\n        <Select\r\n          options={options}\r\n          isSearchable={false}\r\n          value={countryCode}\r\n          onChange={setCountryCode}\r\n          styles={{\r\n            dropdownIndicator: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.25rem',\r\n              };\r\n            },\r\n            valueContainer: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.5rem',\r\n              };\r\n            },\r\n          }}\r\n        />\r\n\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          onBlur={e => {\r\n            field.onBlur(e);\r\n          }}\r\n          className={` border rounded w-full p-2 ${\r\n            meta.error && 'border-main-color'\r\n          }`}\r\n        />\r\n      </div>\r\n      {meta.touched && meta.error ? (\r\n        <h1 className=\"text-xs text-main-color mt-1\">{meta.error}</h1>\r\n      ) : (\r\n        <h1 className=\"text-xs text-main-color mt-1\" style={{ height: '18px' }}>\r\n          {' '}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TrackOrder() {\r\n  const { settings } = React.useContext(DataProvider);\r\n  const [countryCode, setCountryCode] = React.useState(options[0]);\r\n\r\n  const { formatMessage, locale } = useIntl();\r\n  const [errorOpen, setErrorOpen] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const [showGuestOrders, setShowGuestOrders] = React.useState(false);\r\n  const [orders, setOrders] = React.useState([]);\r\n  const closeError = () => {\r\n    setErrorOpen(false);\r\n  };\r\n  const validationSchema = Yup.object({\r\n    phoneNumber: Yup.string()\r\n      .matches(/^\\d+$/, formatMessage({ id: 'number-only' }))\r\n      .required(formatMessage({ id: 'phone-empty' })),\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <AnimatePresence>\r\n        {!showGuestOrders && (\r\n          <motion.div\r\n            initial={false}\r\n            exit={{ opacity: 0 }}\r\n            className=\" text-gray-900 relative max-w-screen-sm mx-auto flex items-center justify-center\"\r\n            style={{\r\n              height: 'calc(100vh - 56px)',\r\n            }}\r\n          >\r\n            {errorOpen && (\r\n              <ErrorSnackbar\r\n                message={errorMessage}\r\n                closeFunction={closeError}\r\n              />\r\n            )}\r\n            <motion.div className=\" z-2  overflow-hidden\">\r\n              <div className=\"flex items-center flex-col mb-4  rounded-lg text-center \">\r\n                <Link to={`/${locale}/`}>\r\n                  <img\r\n                    src={settings?.store_logo_color}\r\n                    alt=\"\"\r\n                    className=\" mb-3\"\r\n                    style={{ width: '100px', height: '50px' }}\r\n                  />\r\n                </Link>\r\n                <h2 className=\"text-xl mb-2 text-center font-bold\">\r\n                  {formatMessage({ id: 'track-my-order' })}\r\n                </h2>\r\n                <h1 className=\"font-semibold\">\r\n                  {formatMessage({ id: 'track-order-enter-your-phone' })}\r\n                </h1>\r\n              </div>\r\n              <div className=\"rounded-lg border bg-gray-100 mb-2\">\r\n                <Formik\r\n                  initialValues={{\r\n                    phoneNumber: '',\r\n                  }}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={async (values, actions) => {\r\n                    setErrorOpen(false);\r\n                    try {\r\n                      const res = await trackGuestOrder({\r\n                        phoneNumber: `${countryCode.value}${values.phoneNumber}`,\r\n                      });\r\n                      setOrders(res.orders);\r\n                      setShowGuestOrders(true);\r\n                      actions.setSubmitting(false);\r\n                    } catch (error) {\r\n                      if (error.response?.data?.message === 'user not exists') {\r\n                        setErrorOpen(true);\r\n                        setErrorMessage(\r\n                          formatMessage({ id: 'track-order-no-orders' })\r\n                        );\r\n                      } else if (\r\n                        error.response?.data?.message?.mobile[0] ===\r\n                        'The selected mobile is invalid.'\r\n                      ) {\r\n                        actions.setErrors({\r\n                          phoneNumber: formatMessage({ id: 'invalid-phone' }),\r\n                        });\r\n                      } else {\r\n                        setErrorOpen(true);\r\n                        setErrorMessage(\r\n                          formatMessage({\r\n                            id: 'something-went-wrong-snackbar',\r\n                          })\r\n                        );\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {({ handleSubmit, values, isSubmitting }) => {\r\n                    return (\r\n                      <form className=\"px-3 py-2\" onSubmit={handleSubmit}>\r\n                        <PhoneNumberCustomInput\r\n                          label={formatMessage({ id: 'phone-label' })}\r\n                          name=\"phoneNumber\"\r\n                          value={values.phoneNumber}\r\n                          countryCode={countryCode}\r\n                          setCountryCode={setCountryCode}\r\n                        />\r\n\r\n                        <div className=\" py-1 mt-2\">\r\n                          <button\r\n                            disabled={isSubmitting}\r\n                            type=\"submit\"\r\n                            className={`${\r\n                              isSubmitting\r\n                                ? 'bg-main-color cursor-not-allowed'\r\n                                : 'bg-main-color text-main-text hover:bg-main-color'\r\n                            } w-full rounded uppercase flex items-center justify-center  p-2 font-semibold  transition duration-150 `}\r\n                          >\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#fff\"\r\n                              height={24}\r\n                              width={24}\r\n                              visible={isSubmitting}\r\n                            />\r\n                            {!isSubmitting &&\r\n                              formatMessage({ id: 'btn-track' })}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      <AnimatePresence>\r\n        {showGuestOrders && <GuestOrders orders={orders} />}\r\n      </AnimatePresence>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}