{"version":3,"sources":["components/TrackOrder/GuestOrderDetailsMobile.js","components/TrackOrder/GuestOrdersMobile.js","pages/TrackOrderMobile.js"],"names":["GuestOrderDetailsMobile","id","isOpen","handleOrderDetailsClose","useIntl","locale","formatMessage","deliveryCountry","React","useContext","DataProvider","useEffect","document","body","style","overflow","useQuery","getSingleGuestOrder","retry","refetchOnWindowFocus","data","isLoading","motion","div","variants","hidden","y","opacity","visible","transition","type","exited","x","initial","animate","exit","className","onClick","height","color","width","address","customer","name","email","mobile","marked_address","userTyped_address","apartment_house_number","building_tower_number","addition_direction","lat","src","lng","process","alt","items","map","orderItem","i","to","product","slug","translation","title","qty","fontWeight","price","toFixed","currency","symbol","subtotal","shipping_cost","coupon_cost","total","GuestOrdersMobile","orders","useState","setIsOpen","selectedOrder","setSelectedOrder","resolveStatus","status","childVariants","length","staggerChildren","when","minHeight","order","layout","moment","created_at","format","payment","payment_method","knet","mastercard","amex","cod","AnimatePresence","options","value","label","TrackOrderMobile","settings","countryCode","setCountryCode","errorOpen","setErrorOpen","errorMessage","setErrorMessage","showGuestOrders","setShowGuestOrders","setOrders","validationSchema","Yup","phoneNumber","matches","required","Layout","ErrorSnackbar","message","closeFunction","store_logo_color","initialValues","onSubmit","values","actions","a","trackGuestOrder","res","setSubmitting","response","setErrors","handleSubmit","isSubmitting","disabled","PhoneNumberCustomInput","props","useField","field","meta","htmlFor","display","gridTemplateColumns","gap","isSearchable","onChange","styles","dropdownIndicator","provided","padding","valueContainer","onBlur","e","error","touched"],"mappings":"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","file":"static/js/33.f12a062f.chunk.js","sourcesContent":["import { motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { AiOutlineArrowLeft, AiOutlineArrowRight } from 'react-icons/ai';\r\nimport { useIntl } from 'react-intl';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport { DataProvider } from '../../contexts/DataContext';\r\nimport { getSingleGuestOrder } from '../../Queries/Queries';\r\n\r\nexport default function GuestOrderDetailsMobile({\r\n  id,\r\n  isOpen,\r\n  handleOrderDetailsClose,\r\n}) {\r\n  const { locale, formatMessage } = useIntl();\r\n  const { deliveryCountry } = React.useContext(DataProvider);\r\n  const containerVariants = {\r\n    hidden: {\r\n      y: '50%',\r\n      opacity: 0,\r\n    },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        type: 'tween',\r\n      },\r\n    },\r\n    exited: {\r\n      x: '100%',\r\n      opacity: 0,\r\n      transition: {\r\n        type: 'tween',\r\n      },\r\n    },\r\n  };\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    }\r\n    return () => (document.body.style.overflow = 'unset');\r\n  }, [isOpen]);\r\n  const { data, isLoading } = useQuery(\r\n    ['single-guest-order', id],\r\n    () => getSingleGuestOrder(id),\r\n    { retry: true, refetchOnWindowFocus: false }\r\n  );\r\n\r\n  return (\r\n    <motion.div\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exited\"\r\n      className=\"fixed top-0 left-0 right-0 bottom-0 overflow-y-scroll bg-body-light z-30 h-screen\"\r\n    >\r\n      <div className=\" sticky top-0 p-3 flex items-center bg-main-color text-main-text z-1\">\r\n        <button\r\n          className=\"text-white text-center\"\r\n          onClick={handleOrderDetailsClose}\r\n        >\r\n          {locale === 'en' ? (\r\n            <AiOutlineArrowLeft className=\"w-6 h-6 \" />\r\n          ) : (\r\n            <AiOutlineArrowRight className=\"w-6 h-6 \" />\r\n          )}\r\n        </button>\r\n        <h1 className=\"font-semibold text-lg mx-4\">\r\n          {formatMessage({ id: 'order-details' })}\r\n        </h1>\r\n      </div>\r\n      {isLoading && (\r\n        <div\r\n          className=\"flex justify-center items-center\"\r\n          style={{ height: 'calc(100vh - 51px)' }}\r\n        >\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#b72b2b\"\r\n            height={40}\r\n            width={40}\r\n            visible={true}\r\n          />\r\n        </div>\r\n      )}\r\n      {!isLoading && (\r\n        <div>\r\n          <div className=\"p-2 border-b\">\r\n            <h1 className=\"font-bold text-lg\">\r\n              {formatMessage({ id: 'delivery' })}\r\n            </h1>\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <div className=\" font-semibold\">\r\n              <h1 className=\"text-gray-700 font-bold\">\r\n                {formatMessage({\r\n                  id: 'full-name',\r\n                })}\r\n              </h1>\r\n              <h1 className=\"text-sm\">{data.address.customer.name}</h1>\r\n            </div>\r\n            {data.address.customer.email && (\r\n              <div className=\" font-semibold\">\r\n                <h1 className=\"text-gray-700 font-bold \">\r\n                  {formatMessage({\r\n                    id: 'full-name',\r\n                  })}\r\n                </h1>\r\n                <h1 className=\"text-sm\">{data.address.customer.email}</h1>\r\n              </div>\r\n            )}\r\n            <div className=\" font-semibold\">\r\n              <h1 className=\"text-gray-700 font-bold\">\r\n                {formatMessage({\r\n                  id: 'phone-number',\r\n                })}\r\n              </h1>\r\n              <h1 className=\"text-sm\">{data.address.customer.mobile}</h1>\r\n            </div>\r\n            <div className=\" font-semibold\">\r\n              <h1 className=\"text-gray-700 font-bold \">\r\n                {formatMessage({\r\n                  id: 'location',\r\n                })}\r\n              </h1>\r\n              <h1 className=\"text-sm\">{`${\r\n                data.address.type === 'map'\r\n                  ? data.address.marked_address\r\n                  : data.address.userTyped_address\r\n              }`}</h1>\r\n            </div>\r\n            <div className=\"font-semibold\">\r\n              <h1 className=\"text-gray-700  font-bold\">\r\n                {formatMessage({\r\n                  id: 'maps-detailed-address-apartment',\r\n                })}\r\n              </h1>\r\n              <h1 className=\"text-sm\">{data.address.apartment_house_number}</h1>\r\n            </div>\r\n            {data.address.building_tower_number && (\r\n              <div className=\"font-semibold\">\r\n                <h1 className=\"text-gray-800  font-bold\">\r\n                  {formatMessage({\r\n                    id: 'maps-detailed-address-building',\r\n                  })}\r\n                </h1>\r\n                <h1 className=\"text-sm\">\r\n                  {data.address.building_tower_number}\r\n                </h1>\r\n              </div>\r\n            )}\r\n            {data.address.addition_direction && (\r\n              <div className=\"font-semibold\">\r\n                <h1 className=\"text-gray-800 font-bold\">\r\n                  {formatMessage({\r\n                    id: 'maps-details-extra-details',\r\n                  })}\r\n                </h1>\r\n                <h1 className=\"text-sm\">{data.address.addition_direction}</h1>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              {data.address.type === 'map' && data.address.lat && (\r\n                <img\r\n                  src={`https://maps.googleapis.com/maps/api/staticmap?center=${data.address.lat},${data.address.lng}&zoom=15&size=150x150&\r\n              markers=color:blue%7C${data.address.lat}-${data.address.lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n                  alt=\"map\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr className=\"my-4\" />\r\n          <div className=\"p-2 border-b\">\r\n            <h1 className=\"font-bold text-lg\">\r\n              {formatMessage({ id: 'order-receipt' })}\r\n            </h1>\r\n          </div>\r\n          <div className=\"p-2 text-sm\">\r\n            <div className=\"my-orders-items__table-desktop font-semibold text-center mb-2\">\r\n              <h1>#</h1>\r\n              <h1>{formatMessage({ id: 'the-item' })}</h1>\r\n              <h1>{formatMessage({ id: 'quantity' })}</h1>\r\n              <h1>{formatMessage({ id: 'price' })}</h1>\r\n              <h1>{formatMessage({ id: 'total' })}</h1>\r\n            </div>\r\n\r\n            {data.items.map((orderItem, i) => {\r\n              return (\r\n                <div\r\n                  key={orderItem.id}\r\n                  className=\"my-orders-item-desktop text-base text-center\"\r\n                >\r\n                  <div className=\"\">\r\n                    <h1 className=\"\">{i + 1}</h1>\r\n                  </div>\r\n                  <Link\r\n                    to={`/${locale}/products/${orderItem.product.slug}/${orderItem.id}`}\r\n                    className=\"hover:underline truncate uppercase font-semibold block\"\r\n                  >\r\n                    {orderItem.product.translation[locale].title}\r\n                  </Link>\r\n                  <div className=\"\">\r\n                    <h1 className=\"\">{orderItem.qty}</h1>\r\n                  </div>\r\n                  <div style={{ fontWeight: 900 }}>\r\n                    <h1 className=\"\">{orderItem.price} </h1>\r\n                  </div>\r\n                  <div style={{ fontWeight: 900 }} className=\"text-green-700\">\r\n                    <h1 className=\"\">\r\n                      {(orderItem.price * orderItem.qty).toFixed(3)}{' '}\r\n                      {deliveryCountry?.currency.translation[locale].symbol}\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <hr className=\"my-3\" />\r\n            <div className=\"my-orders-receipt-summary font-bold\">\r\n              <h1>{formatMessage({ id: 'cart-total' })}</h1>\r\n              <h1 className=\"text-center\">\r\n                {data.subtotal}{' '}\r\n                <span className=\"mx-1\">\r\n                  {deliveryCountry?.currency.translation[locale].symbol}\r\n                </span>\r\n              </h1>\r\n              <h1>{formatMessage({ id: 'cart-delivery-cost' })}</h1>\r\n              <h1 className=\"text-center\">\r\n                {data.shipping_cost === '0'\r\n                  ? formatMessage({ id: 'cart-free' })\r\n                  : data.shipping_cost}{' '}\r\n                <span className=\"mx-1\">\r\n                  {deliveryCountry?.currency.translation[locale].symbol}\r\n                </span>\r\n              </h1>\r\n              {data.coupon_cost !== '0.000' && (\r\n                <h1 className=\"mb-2 text-green-700\">\r\n                  {formatMessage({ id: 'coupon-sale' })}\r\n                </h1>\r\n              )}\r\n              {data.coupon_cost !== '0.000' && (\r\n                <h1 className=\"mb-2 text-center text-green-700\">\r\n                  {data.coupon_cost}\r\n                  <span className=\"mx-1\">\r\n                    {deliveryCountry?.currency.translation[locale].symbol}\r\n                  </span>\r\n                </h1>\r\n              )}\r\n              <h1\r\n                className=\"text-green-700 text-lg font-bold\"\r\n                style={{ fontWeight: 900 }}\r\n              >\r\n                {formatMessage({ id: 'subtotal' })}\r\n              </h1>\r\n              <h1\r\n                className=\"text-green-700 text-lg font-bold text-center\"\r\n                style={{ fontWeight: 900 }}\r\n              >\r\n                {data.total}{' '}\r\n                {deliveryCountry?.currency.translation[locale].symbol}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport knet from '../../assets/paymentLogos/knet.png';\r\nimport mastercard from '../../assets/paymentLogos/mastercard.png';\r\n\r\nimport cod from '../../assets/paymentLogos/cod.png';\r\nimport amex from '../../assets/paymentLogos/amex.png';\r\nimport { useIntl } from 'react-intl';\r\nimport moment from 'moment';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport GuestOrderDetailsMobile from './GuestOrderDetailsMobile';\r\nexport default function GuestOrdersMobile({ orders }) {\r\n  const { formatMessage } = useIntl();\r\n\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [selectedOrder, setSelectedOrder] = React.useState(null);\r\n  const handleOrderDetailsClose = () => {\r\n    setSelectedOrder(null);\r\n    setIsOpen(false);\r\n  };\r\n  const resolveStatus = status => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center rounded  px-3 py-2  font-semibold bg-green-700  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-completed' })}</h1>\r\n          </div>\r\n        );\r\n\r\n      case 'canceled':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center rounded px-3 py-2 font-semibold bg-main-color  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-cancelled' })}</h1>\r\n          </div>\r\n        );\r\n      case 'pending':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark  flex items-center rounded  px-3 py-2  font-semibold bg-yellow-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-pending' })}</h1>\r\n          </div>\r\n        );\r\n      case 'delivery':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark  flex items-center rounded  px-3 py-2 font-semibold bg-blue-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-delivery' })}</h1>\r\n          </div>\r\n        );\r\n      case 'waiting_for_payment':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center  rounded px-3 py-2 font-semibold bg-yellow-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">\r\n              {formatMessage({ id: 'order-waiting-for-payment' })}\r\n            </h1>\r\n          </div>\r\n        );\r\n      case 'confirmed':\r\n        return (\r\n          <div\r\n            className={` text-body-text-dark flex items-center rounded px-3 py-2  font-semibold bg-blue-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-confirmed' })}</h1>\r\n          </div>\r\n        );\r\n      case 'new':\r\n        return (\r\n          <div\r\n            className={`text-body-text-dark px-3 py-2 rounded  font-semibold flex items-center  bg-blue-600  `}\r\n          >\r\n            <h1>{formatMessage({ id: 'order-status' })}</h1>:\r\n            <h1 className=\"mx-1\">{formatMessage({ id: 'order-new' })}</h1>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const resolvePayment = payment => {\r\n    if (payment === 'knet') {\r\n      return (\r\n        <div\r\n          className={`  flex  items-center justify-start  p-2 font-semibold`}\r\n        >\r\n          <img src={knet} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">K-net</div>\r\n        </div>\r\n      );\r\n    }\r\n    if (payment === 'credit') {\r\n      return (\r\n        <div\r\n          className={`  flex  items-center justify-start  p-2 font-semibold`}\r\n        >\r\n          <img src={mastercard} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">Credit Card</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (payment === 'amex') {\r\n      return (\r\n        <div className={` flex  items-center justify-start  p-2 font-semibold`}>\r\n          <img src={amex} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">American Express</div>\r\n        </div>\r\n      );\r\n    }\r\n    if (payment === 'cod') {\r\n      return (\r\n        <div\r\n          className={`  flex  items-center justify-start  p-2 font-semibold`}\r\n        >\r\n          <img src={cod} alt={payment} />\r\n          <div className=\"flex-1 mx-3 text-left\">\r\n            {formatMessage({ id: 'cash-on-delivery' })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  const containerVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n        when: 'beforeChildren',\r\n      },\r\n    },\r\n  };\r\n  const childVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: { y: 0, opacity: 1 },\r\n  };\r\n  if (orders.length === 0) {\r\n    return (\r\n      <div\r\n        className=\"flex justify-center items-center\"\r\n        style={{\r\n          height: 'calc(100vh - 56px)',\r\n        }}\r\n      >\r\n        {formatMessage({ id: 'no-orders-placed' })}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <motion.div\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n        className=\"\"\r\n        style={{ minHeight: 'calc(-56px + 100vh)' }}\r\n      >\r\n        <div className=\"p-3 my-orders-items__grid-mobile\">\r\n          {orders.map(order => {\r\n            return (\r\n              <motion.div\r\n                key={order.id}\r\n                layout\r\n                onClick={() => {\r\n                  setSelectedOrder(order.id);\r\n                  setIsOpen(true);\r\n                }}\r\n                variants={childVariants}\r\n                className={`mb-3 cursor-pointer w-full rounded-lg ${\r\n                  selectedOrder === order.id ? 'bg-gray-800' : 'bg-gray-900'\r\n                }  hover:bg-gray-800 transition duration-200 text-main-text`}\r\n              >\r\n                {resolveStatus(order.status)}\r\n                <div className=\"p-3\">\r\n                  <div className=\"flex items-center font-bold\">\r\n                    <h1>{formatMessage({ id: 'order-number' })}</h1>\r\n                    <h1 className=\"mx-1\">{order.id}</h1>\r\n                  </div>\r\n                  <div className=\"flex items-center font-bold\">\r\n                    <h1>{formatMessage({ id: 'order-date' })}</h1>\r\n                    <h1 className=\"mx-1\">\r\n                      {moment(order.created_at).format('DD/MM/YYYY - HH:MM')}\r\n                    </h1>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center text-sm\">\r\n                    <h1 className=\"text-gray-600\">\r\n                      {order.status === 'completed'\r\n                        ? formatMessage({ id: 'delivery-status' })\r\n                        : formatMessage({ id: 'expected-delivery' })}{' '}\r\n                      :\r\n                    </h1>\r\n                    <h1 className=\"mx-1\">\r\n                      {order.status === 'completed'\r\n                        ? formatMessage({ id: 'delivered' })\r\n                        : 'Soon'}\r\n                    </h1>\r\n                  </div>\r\n\r\n                  <div className=\"text-sm\">\r\n                    <h1 className=\"text-gray-600\">\r\n                      {formatMessage({ id: 'payment-method' })} :\r\n                    </h1>\r\n                    {resolvePayment(order.payment_method)}\r\n                  </div>\r\n\r\n                  <button\r\n                    onClick={() => {\r\n                      setSelectedOrder(order.id);\r\n                      setIsOpen(true);\r\n                    }}\r\n                    className=\"px-3 py-1 text-body-text-dark bg-blue-700 uppercase  rounded font-semibold\"\r\n                  >\r\n                    {formatMessage({ id: 'order-details' })}\r\n                  </button>\r\n                </div>\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </div>\r\n      </motion.div>\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <GuestOrderDetailsMobile\r\n            id={selectedOrder}\r\n            handleOrderDetailsClose={handleOrderDetailsClose}\r\n            isOpen={isOpen}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { DataProvider } from '../contexts/DataContext';\r\nimport * as Yup from 'yup';\r\nimport { Formik, useField } from 'formik';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Select from 'react-select';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { trackGuestOrder } from '../Queries/Queries';\r\nimport Layout from '../components/Layout';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorSnackbar from '../components/ErrorSnackbar';\r\nimport GuestOrdersMobile from '../components/TrackOrder/GuestOrdersMobile';\r\nconst options = [\r\n  { value: '+965', label: '+965' },\r\n  { value: '+966', label: '+966' },\r\n];\r\nexport default function TrackOrderMobile() {\r\n  const { settings } = React.useContext(DataProvider);\r\n  const [countryCode, setCountryCode] = React.useState(options[0]);\r\n\r\n  const { formatMessage, locale } = useIntl();\r\n  const [errorOpen, setErrorOpen] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const [showGuestOrders, setShowGuestOrders] = React.useState(false);\r\n  const [orders, setOrders] = React.useState([]);\r\n  const closeError = () => {\r\n    setErrorOpen(false);\r\n  };\r\n  const validationSchema = Yup.object({\r\n    phoneNumber: Yup.string()\r\n      .matches(/^\\d+$/, formatMessage({ id: 'number-only' }))\r\n      .required(formatMessage({ id: 'phone-empty' })),\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <AnimatePresence>\r\n        {!showGuestOrders && (\r\n          <motion.div\r\n            initial={false}\r\n            exit={{ opacity: 0 }}\r\n            className=\" text-gray-900 p-1 relative flex items-center justify-center\"\r\n            style={{\r\n              height: 'calc(100vh - 56px)',\r\n            }}\r\n          >\r\n            {errorOpen && (\r\n              <ErrorSnackbar\r\n                message={errorMessage}\r\n                closeFunction={closeError}\r\n              />\r\n            )}\r\n            <motion.div className=\" z-2  overflow-hidden\">\r\n              <div className=\"flex items-center flex-col mb-4  rounded-lg text-center \">\r\n                <Link to={`/${locale}/`}>\r\n                  <img\r\n                    src={settings?.store_logo_color}\r\n                    alt=\"\"\r\n                    className=\" mb-3\"\r\n                    style={{ width: '100px', height: '50px' }}\r\n                  />\r\n                </Link>\r\n                <h2 className=\"text-xl mb-2 text-center font-bold\">\r\n                  {formatMessage({ id: 'track-my-order' })}\r\n                </h2>\r\n                <h1 className=\"font-semibold\">\r\n                  {formatMessage({ id: 'track-order-enter-your-phone' })}\r\n                </h1>\r\n              </div>\r\n              <div className=\"rounded-lg border bg-gray-100 mb-2\">\r\n                <Formik\r\n                  initialValues={{\r\n                    phoneNumber: '',\r\n                  }}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={async (values, actions) => {\r\n                    setErrorOpen(false);\r\n                    try {\r\n                      const res = await trackGuestOrder({\r\n                        phoneNumber: `${countryCode.value}${values.phoneNumber}`,\r\n                      });\r\n                      setOrders(res.orders);\r\n                      setShowGuestOrders(true);\r\n                      actions.setSubmitting(false);\r\n                    } catch (error) {\r\n                      if (error.response?.data?.message === 'user not exists') {\r\n                        setErrorOpen(true);\r\n                        setErrorMessage(\r\n                          formatMessage({ id: 'track-order-no-orders' })\r\n                        );\r\n                      } else if (\r\n                        error.response?.data?.message?.mobile[0] ===\r\n                        'The selected mobile is invalid.'\r\n                      ) {\r\n                        actions.setErrors({\r\n                          phoneNumber: formatMessage({ id: 'invalid-phone' }),\r\n                        });\r\n                      } else {\r\n                        setErrorOpen(true);\r\n                        setErrorMessage(\r\n                          formatMessage({\r\n                            id: 'something-went-wrong-snackbar',\r\n                          })\r\n                        );\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {({ handleSubmit, values, isSubmitting }) => {\r\n                    return (\r\n                      <form className=\"px-3 py-2\" onSubmit={handleSubmit}>\r\n                        <PhoneNumberCustomInput\r\n                          label={formatMessage({ id: 'phone-label' })}\r\n                          name=\"phoneNumber\"\r\n                          value={values.phoneNumber}\r\n                          countryCode={countryCode}\r\n                          setCountryCode={setCountryCode}\r\n                        />\r\n\r\n                        <div className=\" py-1 mt-2\">\r\n                          <button\r\n                            disabled={isSubmitting}\r\n                            type=\"submit\"\r\n                            className={`${\r\n                              isSubmitting\r\n                                ? 'bg-main-color cursor-not-allowed'\r\n                                : 'bg-main-color text-main-text hover:bg-main-color'\r\n                            } w-full rounded uppercase flex items-center justify-center  p-2 font-semibold  transition duration-150 `}\r\n                          >\r\n                            <Loader\r\n                              type=\"ThreeDots\"\r\n                              color=\"#fff\"\r\n                              height={24}\r\n                              width={24}\r\n                              visible={isSubmitting}\r\n                            />\r\n                            {!isSubmitting &&\r\n                              formatMessage({ id: 'btn-track' })}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      <AnimatePresence>\r\n        {showGuestOrders && <GuestOrdersMobile orders={orders} />}\r\n      </AnimatePresence>\r\n    </Layout>\r\n  );\r\n}\r\nconst PhoneNumberCustomInput = ({\r\n  label,\r\n  value,\r\n  name,\r\n  countryCode,\r\n  setCountryCode,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(name);\r\n  return (\r\n    <div className=\"w-full mb-2 flex flex-col \">\r\n      <label\r\n        htmlFor={name}\r\n        className={`text-sm font-semibold text-gray-800 mb-1`}\r\n      >\r\n        {label}\r\n      </label>\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: '0.5fr 1fr',\r\n          gap: '0.5rem',\r\n        }}\r\n      >\r\n        <Select\r\n          options={options}\r\n          isSearchable={false}\r\n          value={countryCode}\r\n          onChange={setCountryCode}\r\n          styles={{\r\n            dropdownIndicator: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.25rem',\r\n              };\r\n            },\r\n            valueContainer: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.5rem',\r\n              };\r\n            },\r\n          }}\r\n        />\r\n\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          onBlur={e => {\r\n            field.onBlur(e);\r\n          }}\r\n          className={` border rounded w-full p-2 ${\r\n            meta.error && 'border-main-color'\r\n          }`}\r\n        />\r\n      </div>\r\n      {meta.touched && meta.error ? (\r\n        <h1 className=\"text-xs text-main-color mt-1\">{meta.error}</h1>\r\n      ) : (\r\n        <h1 className=\"text-xs text-main-color mt-1\" style={{ height: '18px' }}>\r\n          {' '}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}