{"version":3,"sources":["components/LocationForm.js","components/GoogleMapsAddress.js","components/MobileCheckout/PersonalInformationMobile.js","components/MobileCheckout/AvailableAddressesMobile.js","components/MobileCheckout/SelectAddressMobile.js","pages/CheckoutMobile.js"],"names":["options","value","label","LocationForm","markerAddress","setShowMap","marker","setMarker","outOfBorder","React","useState","countryCode","setCountryCode","addAddressMutation","useContext","AuthProvider","userTypedLocation","setUserTypedLocation","errorSnackbarOpen","setErrorSnackbarOpen","formatMessage","useIntl","defaultLocationChecked","setDefaultLocationChecked","validationSchema","Yup","apartmentOrHouseNumber","required","id","buildingOrTowerNumber","addressName","phoneNumber","matches","min","additionalDetails","AnimatePresence","ErrorSnackbar","message","closeFunction","className","htmlFor","onClick","rows","type","readOnly","onChange","e","target","initialValues","onSubmit","values","a","lat","lng","defaultLocation","addressDetails","userTyped_address","handleSubmit","isSubmitting","name","checked","disabled","color","height","width","visible","CustomTextInput","props","useField","field","meta","onBlur","touched","error","style","CustomTextAreaInput","PhoneNumberCustomInput","display","gridTemplateColumns","gap","isSearchable","styles","dropdownIndicator","provided","padding","valueContainer","libraries","center","mapStyles","disableDefaultUI","zoomControl","GoogleMapsAddress","isTabletOrAbove","useMediaQuery","query","setOutOfBorder","locale","useLoadScript","googleMapsApiKey","process","language","isLoaded","loadError","markerInfoWindowDetails","setMarkerInfoWindowDetails","setMarkerAddress","mapRef","useRef","onMapLoad","useCallback","map","current","panTo","useEffect","axios","get","then","res","data","results","length","address_components","find","address","types","includes","short_name","formatted_address","join","catch","err","PlacesSearch","mapContainerStyle","zoom","clickableIcons","onLoad","latLng","position","top","left","right","onCloseClick","pixelOffset","window","google","maps","Size","PersonalInformationMobile","handleStepBack","selectedAddress","paymentMethod","setPaymentMethod","handleCheckout","checkoutLoading","deliveryCountry","DataProvider","CartAndWishlistProvider","cartItems","cartSubtotal","cartTotal","shippingCost","couponCost","coupon","handlePaymentChange","method","fontWeight","orderItem","i","to","slug","qty","price","total","currency","translation","symbol","marked_address","apartment_house_number","building_tower_number","addition_direction","src","alt","arr","payment","forEach","status","key","push","knet","mastercard","amex","cod","resolveFlags","AvailableAddressesMobile","userAddresses","handleSelectAddress","infoTabOpen","setInfoTabOpen","infoVariants","partial","bottom","full","AnimateSharedLayout","motion","div","layout","variants","initial","animate","exit","opacity","marginLeft","phone_number","address_name","userTyped_addres","background","SelectAddressMobile","showMap","userAddressesLoading","minHeight","CheckoutMobile","selectedStep","setSelectedStep","setSelectedAddress","errorOpen","setErrorOpen","errorMessage","setErrorMessage","cartItemsLoading","authenticationLoading","useMutation","checkout","throwOnError","checkoutMutation","isLoading","0","1","2","stepDone","setStepDone","order","payment_method","order_type","en","location","href","response","scrollTo","Layout","StepperMobile","OrderPlacedMobile","maxWidth"],"mappings":"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","file":"static/js/20.d47e5928.chunk.js","sourcesContent":["import { Formik, useField } from 'formik';\r\nimport React from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport { AuthProvider } from '../contexts/AuthContext';\r\nimport ErrorSnackbar from './ErrorSnackbar';\r\nimport { AnimatePresence } from 'framer-motion';\r\nconst options = [\r\n  { value: '+965', label: '+965' },\r\n  { value: '+966', label: '+966' },\r\n];\r\nexport default function LocationForm({\r\n  markerAddress,\r\n  setShowMap,\r\n  marker,\r\n  setMarker,\r\n  outOfBorder,\r\n}) {\r\n  const [countryCode, setCountryCode] = React.useState(options[0]);\r\n  const { addAddressMutation } = React.useContext(AuthProvider);\r\n  const [userTypedLocation, setUserTypedLocation] = React.useState('');\r\n  const [errorSnackbarOpen, setErrorSnackbarOpen] = React.useState(false);\r\n  const { formatMessage } = useIntl();\r\n  const [defaultLocationChecked, setDefaultLocationChecked] = React.useState(\r\n    false\r\n  );\r\n  const validationSchema = Yup.object({\r\n    apartmentOrHouseNumber: Yup.string().required(\r\n      formatMessage({ id: 'required-field' })\r\n    ),\r\n    buildingOrTowerNumber: Yup.string().required(\r\n      formatMessage({ id: 'required-field' })\r\n    ),\r\n    addressName: Yup.string().required(formatMessage({ id: 'required-field' })),\r\n    phoneNumber: Yup.string()\r\n      .matches(/^\\d+$/, formatMessage({ id: 'number-only' }))\r\n      .min(8, formatMessage({ id: 'invalid-phone' }))\r\n      .required(formatMessage({ id: 'required-field' })),\r\n    additionalDetails: Yup.string(),\r\n  });\r\n  const handleCloseSnackbar = () => {\r\n    setErrorSnackbarOpen(false);\r\n  };\r\n  const handleClearLocation = () => {\r\n    setMarker(null);\r\n    setUserTypedLocation('');\r\n  };\r\n  return (\r\n    <div>\r\n      <AnimatePresence>\r\n        {errorSnackbarOpen && (\r\n          <ErrorSnackbar\r\n            message={formatMessage({ id: 'something-went-wrong-snackbar' })}\r\n            closeFunction={handleCloseSnackbar}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n      <div className=\"font-bold p-2\">\r\n        <h1>{formatMessage({ id: 'location-details' })}</h1>\r\n      </div>\r\n      <div className=\"p-2\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <label\r\n            htmlFor={'location'}\r\n            className={`text-sm font-bold text-gray-700`}\r\n          >\r\n            {formatMessage({ id: 'delivery-location' })}\r\n          </label>\r\n          <button\r\n            onClick={handleClearLocation}\r\n            className=\"text-main-color text-sm hover:underline\"\r\n          >\r\n            {formatMessage({ id: 'clear' })}\r\n          </button>\r\n        </div>\r\n        <textarea\r\n          rows=\"3\"\r\n          id=\"location\"\r\n          className=\" mt-1 w-full rounded border  p-1  \"\r\n          type=\"textarea\"\r\n          value={markerAddress || userTypedLocation}\r\n          readOnly={markerAddress}\r\n          onChange={e => setUserTypedLocation(e.target.value)}\r\n        />\r\n        <Formik\r\n          initialValues={{\r\n            apartmentOrHouseNumber: '',\r\n            buildingOrTowerNumber: '',\r\n            phoneNumber: '',\r\n            additionalDetails: '',\r\n            addressName: '',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={async values => {\r\n            try {\r\n              await addAddressMutation({\r\n                lat: marker?.lat,\r\n                lng: marker?.lng,\r\n                defaultLocation: defaultLocationChecked,\r\n                addressDetails: {\r\n                  phoneNumber: `${countryCode.value}${values.phoneNumber}`,\r\n                  ...values,\r\n                  markerAddress: markerAddress,\r\n                  userTyped_address: userTypedLocation,\r\n                },\r\n              });\r\n              setShowMap(false);\r\n            } catch (error) {\r\n              setErrorSnackbarOpen(true);\r\n            }\r\n          }}\r\n        >\r\n          {({ handleSubmit, values, isSubmitting }) => {\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <PhoneNumberCustomInput\r\n                  label={formatMessage({ id: 'maps-detailed-address-phone' })}\r\n                  name=\"phoneNumber\"\r\n                  value={values.phoneNumber}\r\n                  type=\"text\"\r\n                  countryCode={countryCode}\r\n                  setCountryCode={setCountryCode}\r\n                />\r\n\r\n                <div className=\"grid grid-cols-2 gap-1\">\r\n                  <CustomTextInput\r\n                    label={formatMessage({\r\n                      id: 'maps-detailed-address-apartment',\r\n                    })}\r\n                    name=\"apartmentOrHouseNumber\"\r\n                    value={values.apartmentOrHouseNumber}\r\n                    type=\"text\"\r\n                  />\r\n                  <CustomTextInput\r\n                    label={formatMessage({\r\n                      id: 'maps-detailed-address-building',\r\n                    })}\r\n                    name=\"buildingOrTowerNumber\"\r\n                    value={values.buildingOrTowerNumber}\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <CustomTextInput\r\n                  label={formatMessage({\r\n                    id: 'maps-detailed-address-name',\r\n                  })}\r\n                  name=\"addressName\"\r\n                  value={values.addressName}\r\n                  type=\"text\"\r\n                />\r\n                <CustomTextAreaInput\r\n                  label={formatMessage({\r\n                    id: 'maps-details-extra-details',\r\n                  })}\r\n                  name=\"additionalDetails\"\r\n                  value={values.additionalDetails}\r\n                />\r\n\r\n                <div className=\" \">\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <label>{formatMessage({ id: 'mark-as-default' })}</label>\r\n                    <input\r\n                      className=\" mx-2\"\r\n                      type=\"checkbox\"\r\n                      checked={defaultLocationChecked}\r\n                      onChange={() =>\r\n                        setDefaultLocationChecked(!defaultLocationChecked)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={\r\n                      (!markerAddress && !userTypedLocation) || outOfBorder\r\n                    }\r\n                    className={`  ${\r\n                      (!markerAddress && !userTypedLocation) || outOfBorder\r\n                        ? 'bg-gray-500 text-gray-300'\r\n                        : 'bg-main-color text-main-text'\r\n                    } p-2 rounded  w-full  flex items-center uppercase justify-center font-semibold`}\r\n                  >\r\n                    {isSubmitting ? (\r\n                      <Loader\r\n                        type=\"ThreeDots\"\r\n                        color=\"#fff\"\r\n                        height={23}\r\n                        width={23}\r\n                        visible={isSubmitting}\r\n                      />\r\n                    ) : (\r\n                      <h1>{formatMessage({ id: 'confirm-btn' })}</h1>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomTextInput = ({ label, value, name, ...props }) => {\r\n  const [field, meta] = useField(name);\r\n  return (\r\n    <div className=\"w-full mb-1 relative\">\r\n      <label htmlFor={name} className={`text-sm font-bold text-gray-700 mb-1`}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        {...field}\r\n        {...props}\r\n        onBlur={e => {\r\n          field.onBlur(e);\r\n        }}\r\n        className=\" w-full rounded-sm border   p-1\"\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <h1 className=\"text-xs text-main-color mt-1\">{meta.error}</h1>\r\n      ) : (\r\n        <h1 className=\"text-xs text-main-color mt-1\" style={{ height: '18px' }}>\r\n          {' '}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst CustomTextAreaInput = ({ label, value, name, ...props }) => {\r\n  const [field] = useField(name);\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <div className=\"w-full mb-1 relative\">\r\n      <div className=\"flex items-center mb-1\">\r\n        <label htmlFor={name} className={`text-sm font-bold text-gray-700`}>\r\n          {label}\r\n        </label>\r\n        <h1 className=\"text-xs italic mx-3\">\r\n          ({formatMessage({ id: 'maps-details-optional' })})\r\n        </h1>\r\n      </div>\r\n      <textarea\r\n        rows={3}\r\n        {...field}\r\n        {...props}\r\n        onBlur={e => {\r\n          field.onBlur(e);\r\n        }}\r\n        className=\" w-full rounded-sm border   p-1\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst PhoneNumberCustomInput = ({\r\n  label,\r\n  value,\r\n  name,\r\n  countryCode,\r\n  setCountryCode,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField(name);\r\n  return (\r\n    <div className=\"w-full mb-1 flex flex-col \">\r\n      <label htmlFor={name} className={`text-sm font-bold text-gray-800 mb-1`}>\r\n        {label}\r\n      </label>\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: '0.4fr 1fr',\r\n          gap: '0.5rem',\r\n        }}\r\n      >\r\n        <Select\r\n          options={options}\r\n          isSearchable={false}\r\n          value={countryCode}\r\n          onChange={setCountryCode}\r\n          styles={{\r\n            dropdownIndicator: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.25rem',\r\n              };\r\n            },\r\n            valueContainer: provided => {\r\n              return {\r\n                ...provided,\r\n                padding: '0.5rem',\r\n              };\r\n            },\r\n          }}\r\n        />\r\n\r\n        <input\r\n          {...field}\r\n          {...props}\r\n          onBlur={e => {\r\n            field.onBlur(e);\r\n          }}\r\n          className={` border rounded w-full p-2 ${\r\n            meta.error && 'border-main-color'\r\n          }`}\r\n        />\r\n      </div>\r\n      {meta.touched && meta.error ? (\r\n        <h1 className=\"text-xs text-main-color mt-1\">{meta.error}</h1>\r\n      ) : (\r\n        <h1 className=\"text-xs text-main-color mt-1\" style={{ height: '18px' }}>\r\n          {' '}\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport mapStyles from '../helpers/mapStyles';\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from '@react-google-maps/api';\r\nimport PlacesSearch from './Cart/GuestCheckout/GoogleMaps/PlacesSearch';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport LocationForm from './LocationForm';\r\nimport { useIntl } from 'react-intl';\r\nconst libraries = ['places'];\r\n\r\nconst center = {\r\n  lat: 29.3759,\r\n  lng: 47.9774,\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nexport default function GoogleMapsAddress({ setShowMap }) {\r\n  const isTabletOrAbove = useMediaQuery({ query: '(min-width: 768px)' });\r\n  const [outOfBorder, setOutOfBorder] = React.useState(false);\r\n  const { formatMessage, locale } = useIntl();\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n    language: locale,\r\n  });\r\n\r\n  const [marker, setMarker] = React.useState(null);\r\n  const [markerInfoWindowDetails, setMarkerInfoWindowDetails] = React.useState(\r\n    null\r\n  );\r\n  const [markerAddress, setMarkerAddress] = React.useState(null);\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback(map => {\r\n    mapRef.current = map;\r\n  }, []);\r\n  const panTo = React.useCallback(({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n    setMarker({ lat, lng });\r\n    setMarkerInfoWindowDetails(null);\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (marker) {\r\n      axios\r\n        .get(\r\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${marker.lat},${marker.lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&language=${locale}`\r\n        )\r\n        .then(res => {\r\n          if (res.data.results.length === 0) {\r\n            setMarkerAddress(null);\r\n            setMarkerInfoWindowDetails(null);\r\n            setOutOfBorder(true);\r\n            return;\r\n          }\r\n          if (\r\n            res.data.results[0].address_components.find(address =>\r\n              address.types.includes('country')\r\n            ).short_name !== 'KW' ||\r\n            res.data.results.length === 0\r\n          ) {\r\n            setOutOfBorder(true);\r\n          } else {\r\n            if (outOfBorder === true) {\r\n              setOutOfBorder(false);\r\n            }\r\n          }\r\n          setMarkerAddress(`${res.data.results[0].formatted_address}`);\r\n          setMarkerInfoWindowDetails(\r\n            `${res.data.results[0].address_components\r\n              .map(address => address.short_name)\r\n              .join(', ')}`\r\n          );\r\n        })\r\n        .catch(err => {});\r\n    } else {\r\n      setMarkerAddress(null);\r\n      setMarkerInfoWindowDetails(null);\r\n    }\r\n  }, [marker, locale]);\r\n\r\n  if (loadError)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full\">\r\n        <h1>{formatMessage({ id: 'error-loading-maps' })}</h1>\r\n      </div>\r\n    );\r\n  if (!isLoaded)\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full\">\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#b72b2b\"\r\n          height={40}\r\n          width={40}\r\n          visible={!isLoaded}\r\n        />\r\n      </div>\r\n    );\r\n  return (\r\n    <div\r\n      className={`${\r\n        isTabletOrAbove\r\n          ? 'my-addresses-desktop-maps__grid'\r\n          : 'my-addresses-mobile-maps__grid'\r\n      }`}\r\n    >\r\n      <div className=\"relative h-full\">\r\n        <PlacesSearch panTo={panTo} markerAddress={markerAddress} />\r\n\r\n        <GoogleMap\r\n          mapContainerStyle={{\r\n            width: '100%',\r\n            height: isTabletOrAbove ? '100%' : '400px',\r\n          }}\r\n          zoom={15}\r\n          center={center}\r\n          options={options}\r\n          clickableIcons={false}\r\n          onLoad={onMapLoad}\r\n          onClick={e => {\r\n            setMarker({\r\n              lat: e.latLng.lat(),\r\n              lng: e.latLng.lng(),\r\n            });\r\n          }}\r\n        >\r\n          {marker && (\r\n            <Marker position={{ lat: marker?.lat, lng: marker?.lng }} />\r\n          )}\r\n          {outOfBorder && (\r\n            <div\r\n              className=\"absolute mx-2 rounded p-2  bg-main-color text-main-text text-center\"\r\n              style={{ top: '110px', left: '2%', right: '2%', width: '94%' }}\r\n            >\r\n              <h1 className=\"text-sm\">\r\n                {formatMessage({ id: 'out-of-border' })}\r\n              </h1>\r\n            </div>\r\n          )}\r\n          {markerInfoWindowDetails && (\r\n            <InfoWindow\r\n              onCloseClick={() => setMarkerInfoWindowDetails(null)}\r\n              position={{ lat: marker?.lat, lng: marker?.lng }}\r\n              options={{\r\n                pixelOffset: new window.google.maps.Size(0, -50),\r\n              }}\r\n            >\r\n              <div className=\"p-2\">\r\n                <div>\r\n                  <h1>{markerInfoWindowDetails}</h1>\r\n                </div>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n      </div>\r\n      <LocationForm\r\n        markerAddress={markerAddress}\r\n        marker={marker}\r\n        setShowMap={setShowMap}\r\n        setMarker={setMarker}\r\n        outOfBorder={outOfBorder}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BiRadioCircle, BiRadioCircleMarked } from 'react-icons/bi';\r\nimport { useIntl } from 'react-intl';\r\nimport knet from '../../assets/paymentLogos/knet.png';\r\nimport mastercard from '../../assets/paymentLogos/mastercard.png';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport cod from '../../assets/paymentLogos/cod.png';\r\nimport amex from '../../assets/paymentLogos/amex.png';\r\nimport { DataProvider } from '../../contexts/DataContext';\r\nimport { CartAndWishlistProvider } from '../../contexts/CartAndWishlistContext';\r\nimport { Link } from 'react-router-dom';\r\nexport default function PersonalInformationMobile({\r\n  handleStepBack,\r\n  selectedAddress,\r\n  paymentMethod,\r\n  setPaymentMethod,\r\n  handleCheckout,\r\n  checkoutLoading,\r\n}) {\r\n  const { formatMessage, locale } = useIntl();\r\n  const { deliveryCountry } = React.useContext(DataProvider);\r\n  const {\r\n    cartItems,\r\n    cartSubtotal,\r\n    cartTotal,\r\n    shippingCost,\r\n    couponCost,\r\n    coupon,\r\n  } = React.useContext(CartAndWishlistProvider);\r\n\r\n  const resolveFlags = () => {\r\n    let arr = [];\r\n    if (!deliveryCountry) return;\r\n    deliveryCountry.payment.forEach(payment => {\r\n      if (payment.status === 0) return null;\r\n      if (payment.key === 'knet') {\r\n        arr.push(\r\n          <button\r\n            key={payment.key}\r\n            onClick={() => handlePaymentChange(payment.key)}\r\n            className={` ${\r\n              paymentMethod === payment.key &&\r\n              'bg-main-color text-main-text border-main-color'\r\n            } mb-2 flex border text-sm items-center justify-start rounded-lg p-2 font-semibold`}\r\n          >\r\n            <img src={knet} alt={payment.key} />\r\n            <div className=\"flex-1 mx-3 text-left\">\r\n              {formatMessage({ id: payment.key })}\r\n            </div>\r\n            <div>\r\n              {paymentMethod === payment.key ? (\r\n                <BiRadioCircleMarked className=\"w-6 h-6 text-btn-secondary-light\" />\r\n              ) : (\r\n                <BiRadioCircle className=\"w-6 h-6 text-btn-primary-light\" />\r\n              )}\r\n            </div>\r\n          </button>\r\n        );\r\n      }\r\n      if (payment.key === 'credit') {\r\n        arr.push(\r\n          <button\r\n            key={payment.key}\r\n            onClick={() => handlePaymentChange(payment.key)}\r\n            className={` ${\r\n              paymentMethod === payment.key &&\r\n              'bg-main-color text-main-text border-main-color'\r\n            } mb-2 flex border text-sm items-center justify-start rounded-lg p-2 font-semibold`}\r\n          >\r\n            <img src={mastercard} alt={payment.key} />\r\n            <div className=\"flex-1 mx-3 text-left\">\r\n              {formatMessage({ id: payment.key })}\r\n            </div>\r\n            <div>\r\n              {paymentMethod === payment.key ? (\r\n                <BiRadioCircleMarked className=\"w-6 h-6 text-btn-secondary-light\" />\r\n              ) : (\r\n                <BiRadioCircle className=\"w-6 h-6 text-btn-primary-light\" />\r\n              )}\r\n            </div>\r\n          </button>\r\n        );\r\n      }\r\n\r\n      if (payment.key === 'amex') {\r\n        arr.push(\r\n          <button\r\n            key={payment.key}\r\n            onClick={() => handlePaymentChange(payment.key)}\r\n            className={` ${\r\n              paymentMethod === payment.key &&\r\n              'bg-main-color text-main-text border-main-color'\r\n            } mb-2 flex border text-sm items-center justify-start rounded-lg p-2 font-semibold`}\r\n          >\r\n            <img src={amex} alt={payment.key} />\r\n            <div className=\"flex-1 mx-3 text-left\">\r\n              {formatMessage({ id: payment.key })}\r\n            </div>\r\n            <div>\r\n              {paymentMethod === payment.key ? (\r\n                <BiRadioCircleMarked className=\"w-6 h-6 text-btn-secondary-light\" />\r\n              ) : (\r\n                <BiRadioCircle className=\"w-6 h-6 text-btn-primary-light\" />\r\n              )}\r\n            </div>\r\n          </button>\r\n        );\r\n      }\r\n      if (payment.key === 'cod') {\r\n        arr.push(\r\n          <button\r\n            key={payment.key}\r\n            onClick={() => handlePaymentChange(payment.key)}\r\n            className={` ${\r\n              paymentMethod === payment.key &&\r\n              'bg-main-color text-main-text border-main-color'\r\n            } mb-2 flex border text-sm items-center justify-start rounded-lg p-2 font-semibold`}\r\n          >\r\n            <img src={cod} alt={payment.key} />\r\n            <div className=\"flex-1 mx-3 text-left\">\r\n              {formatMessage({ id: 'cash-on-delivery' })}\r\n            </div>\r\n            <div>\r\n              {paymentMethod === payment.key ? (\r\n                <BiRadioCircleMarked className=\"w-6 h-6 text-main-text\" />\r\n              ) : (\r\n                <BiRadioCircle className=\"w-6 h-6 text-main-color\" />\r\n              )}\r\n            </div>\r\n          </button>\r\n        );\r\n      }\r\n    });\r\n    return arr;\r\n  };\r\n  const handlePaymentChange = method => {\r\n    setPaymentMethod(method);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"quick-checkout-personal-info-mobile__container\">\r\n        <div className=\"flex flex-col justify-center font-semibold text-sm px-2 \">\r\n          {/* Order Items */}\r\n          <div className=\"\">\r\n            <div className=\"p-2 border-b\">\r\n              <h1\r\n                className=\" text-center text-base\"\r\n                style={{ fontWeight: 900 }}\r\n              >\r\n                {formatMessage({ id: 'order-receipt' })}\r\n              </h1>\r\n            </div>\r\n            <div className=\"my-orders-items__table-mobile font-semibold text-center mb-1 py-2\">\r\n              <h1>#</h1>\r\n              <h1>{formatMessage({ id: 'the-item' })}</h1>\r\n              <h1>{formatMessage({ id: 'quantity' })}</h1>\r\n              <h1>{formatMessage({ id: 'price' })}</h1>\r\n              <h1>{formatMessage({ id: 'total' })}</h1>\r\n            </div>\r\n            {cartItems?.map((orderItem, i) => {\r\n              return (\r\n                <div\r\n                  key={orderItem.id}\r\n                  className=\"my-orders-item-mobile text-sm text-center mb-1\"\r\n                >\r\n                  <div className=\"\">\r\n                    <h1 className=\"\">{i + 1}</h1>\r\n                  </div>\r\n                  <Link\r\n                    to={`/${locale}/products/${orderItem.slug}/${orderItem.id}`}\r\n                    className=\"hover:underline block truncate\"\r\n                  >\r\n                    <h1 className=\"truncate  font-semibold\">\r\n                      {orderItem[`name_${locale}`]}\r\n                    </h1>\r\n                  </Link>\r\n                  <div className=\"\">\r\n                    <h1 className=\"\">{orderItem.qty}</h1>\r\n                  </div>\r\n                  <div style={{ fontWeight: 900 }}>\r\n                    <h1 className=\"\">{orderItem.price}</h1>\r\n                  </div>\r\n                  <div style={{ fontWeight: 900 }} className=\"text-green-700\">\r\n                    <h1 className=\"\">\r\n                      {orderItem.total}{' '}\r\n                      {deliveryCountry?.currency.translation[locale].symbol}\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <hr className=\"my-3\" />\r\n            <div className=\"my-orders-receipt-summary font-bold\">\r\n              <h1>{formatMessage({ id: 'cart-total' })}</h1>\r\n              <h1 className=\"text-center\">\r\n                {cartSubtotal}\r\n                <span className=\"mx-1\">\r\n                  {deliveryCountry?.currency.translation[locale].symbol}\r\n                </span>\r\n              </h1>\r\n              <h1>{formatMessage({ id: 'cart-delivery-cost' })}</h1>\r\n              <h1 className=\" text-center\">\r\n                {shippingCost === '0'\r\n                  ? formatMessage({ id: 'cart-free' })\r\n                  : shippingCost}\r\n                <span className=\"mx-1\">\r\n                  {deliveryCountry?.currency.translation[locale].symbol}\r\n                </span>\r\n              </h1>\r\n              {coupon && (\r\n                <>\r\n                  <h1 className=\"\">{formatMessage({ id: 'coupon-sale' })}</h1>\r\n                  <h1 className=\"text-center text-green-700\">\r\n                    {couponCost}\r\n                    <span className=\"mx-1\">\r\n                      {deliveryCountry?.currency.translation[locale].symbol}\r\n                    </span>\r\n                  </h1>\r\n                </>\r\n              )}\r\n              <h1 className=\"text-green-700 mt-3 text-lg font-bold\">\r\n                {formatMessage({ id: 'subtotal' })}\r\n              </h1>\r\n              <h1 className=\"text-green-700 text-center mt-3 text-lg font-bold\">\r\n                {cartTotal}{' '}\r\n                {deliveryCountry?.currency.translation[locale].symbol}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"p-2 border-b\">\r\n              <h1 style={{ fontWeight: 900 }} className=\"text-center\">\r\n                {formatMessage({\r\n                  id: 'delivery-address',\r\n                })}\r\n              </h1>\r\n            </div>\r\n            <div\r\n              className=\" p-2\"\r\n              style={{ display: 'grid', gridTemplateColumns: '1fr 0.7fr' }}\r\n            >\r\n              <div>\r\n                <div className=\"mb-2\">\r\n                  <h1 className=\" text-gray-700\">\r\n                    {formatMessage({\r\n                      id: 'delivery-location',\r\n                    })}{' '}\r\n                  </h1>\r\n\r\n                  <h1>\r\n                    {selectedAddress?.marked_address ||\r\n                      selectedAddress?.userTyped_address}\r\n                  </h1>\r\n                </div>\r\n                <div className=\" mb-2\">\r\n                  <div>\r\n                    <h1 className=\" text-gray-700\">\r\n                      {formatMessage({\r\n                        id: 'maps-detailed-address-apartment',\r\n                      })}{' '}\r\n                    </h1>\r\n\r\n                    <h1>{selectedAddress?.apartment_house_number}</h1>\r\n                  </div>\r\n                  <div>\r\n                    <h1 className=\"font-semibold text-gray-700\">\r\n                      {formatMessage({\r\n                        id: 'maps-detailed-address-building',\r\n                      })}{' '}\r\n                    </h1>\r\n                    <h1>{selectedAddress?.building_tower_number}</h1>\r\n                  </div>\r\n                </div>\r\n                <div className=\"\">\r\n                  <div>\r\n                    <h1 className=\"font-semibold text-gray-700\">\r\n                      {formatMessage({\r\n                        id: 'maps-details-extra-details',\r\n                      })}{' '}\r\n                      :{' '}\r\n                    </h1>\r\n                    <h1 className=\"\">\r\n                      {selectedAddress?.addition_direction ||\r\n                        formatMessage({ id: 'none' })}\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {selectedAddress?.lat && (\r\n                <img\r\n                  src={`https://maps.googleapis.com/maps/api/staticmap?center=${selectedAddress.lat},${selectedAddress.lng}&zoom=15&size=200x200&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n                  alt=\"map\"\r\n                  className=\"self-start\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr className=\"my-5\" />\r\n        <div className=\" mb-2 relative font-semibold  \">\r\n          <div className=\"mb-1\">\r\n            <h1 className=\"text-center\" style={{ fontWeight: 900 }}>\r\n              {formatMessage({ id: 'select-payment-method' })}\r\n            </h1>\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <div className=\"flex flex-col \">{resolveFlags()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end items-center\">\r\n        <button\r\n          className=\"px-3 py-1 text-sm uppercase bg-main-color text-main-text rounded font-semibold\"\r\n          onClick={handleStepBack}\r\n        >\r\n          {formatMessage({ id: 'btn-back-to-addresses' })}\r\n        </button>\r\n        <button\r\n          disabled={!paymentMethod}\r\n          className={`\r\n              ${\r\n                paymentMethod\r\n                  ? 'bg-main-color text-main-text'\r\n                  : 'bg-gray-600 text-gray-100'\r\n              } flex items-center text-sm justify-center uppercase px-3 py-1 mx-2  rounded font-semibold`}\r\n          onClick={handleCheckout}\r\n        >\r\n          {checkoutLoading ? (\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#fff\"\r\n              height={24}\r\n              width={24}\r\n              visible={true}\r\n            />\r\n          ) : (\r\n            formatMessage({ id: 'btn-proceed' })\r\n          )}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { AiOutlineInfoCircle, AiOutlinePlus } from 'react-icons/ai';\r\nimport Ink from 'react-ink';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default function AvailableAddressesMobile({\r\n  userAddresses,\r\n  setShowMap,\r\n\r\n  handleSelectAddress,\r\n}) {\r\n  const { formatMessage } = useIntl();\r\n  const [infoTabOpen, setInfoTabOpen] = React.useState(null);\r\n\r\n  const infoVariants = {\r\n    partial: {\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      width: '20%',\r\n    },\r\n    full: {\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      width: '100%',\r\n    },\r\n  };\r\n\r\n  const handleInfoTabOpen = id => {\r\n    if (infoTabOpen === id) {\r\n      setInfoTabOpen(null);\r\n    } else {\r\n      setInfoTabOpen(id);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-full\">\r\n      <div className=\" p-2 flex items-center justify-between bg-main-color text-main-text\">\r\n        <h1 className=\"text-sm font-semibold\">\r\n          {formatMessage({ id: 'select-address-header' })}\r\n        </h1>\r\n      </div>\r\n      <AnimateSharedLayout>\r\n        <motion.div layout className=\"p-2 locations-grid__mobile\">\r\n          {userAddresses.map(address => {\r\n            return (\r\n              <motion.div\r\n                layout\r\n                key={address.id}\r\n                className={` rounded border relative  bg-body-light`}\r\n              >\r\n                <motion.div layout>\r\n                  <div style={{ position: 'relative' }}>\r\n                    <img\r\n                      src={`https://maps.googleapis.com/maps/api/staticmap?center=${address.lat},${address.lng}&zoom=15&size=350x250&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`}\r\n                      alt=\"thumbnail\"\r\n                    />\r\n                    <motion.div\r\n                      variants={infoVariants}\r\n                      initial=\"partial\"\r\n                      animate={infoTabOpen === address.id ? 'full' : 'partial'}\r\n                      layout\r\n                      exit=\"partial\"\r\n                      onClick={() => handleInfoTabOpen(address.id)}\r\n                      className=\"absolute overflow-hidden p-2 text-main-text  transition cursor-pointer duration-150 opacity-75 bg-gray-800\"\r\n                    >\r\n                      <AiOutlineInfoCircle\r\n                        style={{ left: '10px' }}\r\n                        className=\"absolute  top-1/2 transform  -translate-y-1/2  w-5 h-5\"\r\n                      />\r\n                      <AnimatePresence>\r\n                        {infoTabOpen === address.id && (\r\n                          <motion.div\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1, marginLeft: '35px' }}\r\n                            exit={{ opacity: 0 }}\r\n                            layout\r\n                            className=\"text-xs\"\r\n                          >\r\n                            <div>\r\n                              <h1>\r\n                                {formatMessage({\r\n                                  id: 'maps-detailed-address-apartment-short',\r\n                                })}\r\n                                :\r\n                              </h1>\r\n                              <h1>{address.apartment_house_number}</h1>\r\n                            </div>\r\n                            <div>\r\n                              <h1>\r\n                                {formatMessage({\r\n                                  id: 'maps-detailed-address-building-short',\r\n                                })}\r\n                                :\r\n                              </h1>\r\n                              <h1>{address.building_tower_number}</h1>\r\n                            </div>\r\n                            <div>\r\n                              <h1>\r\n                                {formatMessage({\r\n                                  id: 'maps-detailed-address-phone-short',\r\n                                })}\r\n                                :\r\n                              </h1>\r\n                              <h1>{address.phone_number}</h1>\r\n                            </div>\r\n                          </motion.div>\r\n                        )}\r\n                      </AnimatePresence>\r\n                    </motion.div>\r\n                  </div>\r\n                  <div className=\"p-1\">\r\n                    <div className=\"text-xs text-gray-600 font-semibold\">\r\n                      <h1>{address.address_name}</h1>\r\n                    </div>\r\n                    <div\r\n                      className=\"text-xs mb-2 font-semibold\"\r\n                      style={{ height: '50px' }}\r\n                    >\r\n                      <h1>\r\n                        {address.marked_address || address.userTyped_addres}\r\n                      </h1>\r\n                      <h1>{address.addition_direction}</h1>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleSelectAddress(address)}\r\n                      className={`w-full text-sm p-1 rounded uppercase \r\n                          bg-main-color\r\n                      } text-main-text`}\r\n                    >\r\n                      {formatMessage({ id: 'select-btn' })}\r\n                    </button>\r\n                  </div>\r\n                </motion.div>\r\n              </motion.div>\r\n            );\r\n          })}\r\n          <div className=\"p-3 flex items-center justify-center \">\r\n            <button\r\n              onClick={() => setShowMap(true)}\r\n              className=\"p-3 flex items-center justify-center place-self-center justify-self-center bg-main-color hover:bg-red-900 transition duration-150 relative rounded-lg text-main-text\"\r\n            >\r\n              <Ink background={true} />\r\n              <AiOutlinePlus className=\"h-8 w-8\" />\r\n            </button>\r\n          </div>\r\n        </motion.div>\r\n      </AnimateSharedLayout>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AuthProvider } from '../../contexts/AuthContext';\r\nimport GoogleMapsAddress from '../GoogleMapsAddress';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport AvailableAddressesMobile from './AvailableAddressesMobile';\r\nexport default function SelectAddressMobile({ handleSelectAddress }) {\r\n  const [showMap, setShowMap] = React.useState(false);\r\n  const { userAddresses, userAddressesLoading } = React.useContext(\r\n    AuthProvider\r\n  );\r\n  if (userAddressesLoading)\r\n    return (\r\n      <div\r\n        className=\"flex h-full justify-center items-center\"\r\n        style={{ minHeight: 'calc(100vh - 102px)' }}\r\n      >\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#b72b2b\"\r\n          height={40}\r\n          width={40}\r\n          visible={true}\r\n        />\r\n      </div>\r\n    );\r\n  return (\r\n    <div className=\"h-full\">\r\n      {userAddresses.length !== 0 && !showMap && (\r\n        <AvailableAddressesMobile\r\n          userAddresses={userAddresses}\r\n          setShowMap={setShowMap}\r\n          handleSelectAddress={handleSelectAddress}\r\n        />\r\n      )}\r\n      {(userAddresses.length === 0 || showMap) && (\r\n        <div className=\" border mb-2 h-full\">\r\n          <GoogleMapsAddress setShowMap={setShowMap} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport OrderPlacedMobile from '../components/CartMobile/GuestCheckoutMobile/OrderPlacedMobile';\r\nimport PersonalInformationMobile from '../components/MobileCheckout/PersonalInformationMobile';\r\nimport StepperMobile from '../components/CartMobile/GuestCheckoutMobile/StepperMobile';\r\nimport Layout from '../components/Layout';\r\nimport SelectAddressMobile from '../components/MobileCheckout/SelectAddressMobile';\r\nimport { DataProvider } from '../contexts/DataContext';\r\nimport { checkout } from '../Queries/Queries';\r\nimport { useMutation } from 'react-query';\r\nimport { CartAndWishlistProvider } from '../contexts/CartAndWishlistContext';\r\nimport { useIntl } from 'react-intl';\r\nimport ErrorSnackbar from '../components/ErrorSnackbar';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nexport default function CheckoutMobile() {\r\n  const { deliveryCountry } = React.useContext(DataProvider);\r\n  const [selectedStep, setSelectedStep] = React.useState(0);\r\n  const [selectedAddress, setSelectedAddress] = React.useState(null);\r\n  const [paymentMethod, setPaymentMethod] = React.useState(null);\r\n  const [errorOpen, setErrorOpen] = React.useState(false);\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const { cartItems, cartItemsLoading, coupon } = React.useContext(\r\n    CartAndWishlistProvider\r\n  );\r\n  const { authenticationLoading } = React.useContext(DataProvider);\r\n  const { formatMessage } = useIntl();\r\n  const closeError = () => {\r\n    setErrorOpen(false);\r\n  };\r\n\r\n  const [\r\n    checkoutMutation,\r\n    { isLoading: checkoutLoading },\r\n  ] = useMutation(checkout, { throwOnError: true });\r\n  const [stepDone, setStepDone] = React.useState({\r\n    0: false,\r\n    1: false,\r\n    2: false,\r\n  });\r\n  const handleStepBack = () => {\r\n    if (selectedStep === 0) {\r\n      return;\r\n    } else {\r\n      setSelectedStep(selectedStep - 1);\r\n      setStepDone({\r\n        ...stepDone,\r\n        [selectedStep - 1]: false,\r\n      });\r\n    }\r\n  };\r\n  const handleStepForward = () => {\r\n    setSelectedStep(selectedStep + 1);\r\n    setStepDone({\r\n      ...stepDone,\r\n      [selectedStep]: true,\r\n    });\r\n  };\r\n  const handleSelectAddress = address => {\r\n    setSelectedAddress(address);\r\n    handleStepForward();\r\n  };\r\n  const handleCheckout = async () => {\r\n    const order = {\r\n      address: selectedAddress.id,\r\n      payment_method: paymentMethod,\r\n      order_type:\r\n        deliveryCountry?.translation.en.name === 'Kuwait'\r\n          ? 'local'\r\n          : 'international',\r\n    };\r\n    try {\r\n      const res = await checkoutMutation({\r\n        deliveryCountry,\r\n        order,\r\n        coupon,\r\n      });\r\n      setStepDone({\r\n        ...stepDone,\r\n        1: true,\r\n      });\r\n\r\n      if (paymentMethod === 'cod') {\r\n        setSelectedStep(2);\r\n      } else {\r\n        window.location.href = res.payment;\r\n      }\r\n    } catch (error) {\r\n      setErrorOpen(true);\r\n      if (\r\n        error.response?.data?.message ===\r\n        'Coupon already used by this customer.'\r\n      ) {\r\n        return setErrorMessage(formatMessage({ id: 'coupon-limit-reached' }));\r\n      }\r\n      setErrorMessage(formatMessage({ id: 'something-went-wrong-snackbar' }));\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [selectedStep]);\r\n  if (cartItemsLoading || authenticationLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <Loader\r\n          type=\"ThreeDots\"\r\n          color=\"#b72b2b\"\r\n          height={50}\r\n          width={50}\r\n          visible={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  if (!cartItemsLoading && cartItems.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <div\r\n          className=\"flex items-center justify-center mx-auto text-center\"\r\n          style={{ height: 'calc(100vh - 110px)', maxWidth: '360px' }}\r\n        >\r\n          <h1 className=\"text-lg font-semibold\">\r\n            {formatMessage({ id: 'checkout-cart-empty' })}\r\n          </h1>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n  return (\r\n    <Layout>\r\n      {errorOpen && (\r\n        <ErrorSnackbar message={errorMessage} closeFunction={closeError} />\r\n      )}\r\n      <div className=\"xxl:max-w-default md:max-w-screen-xl mx-auto\">\r\n        <StepperMobile selectedStep={selectedStep} stepDone={stepDone} />\r\n        <div className=\"mb-3\" style={{ minHeight: 'calc(100vh - 231px)' }}>\r\n          {selectedStep === 0 && (\r\n            <SelectAddressMobile handleSelectAddress={handleSelectAddress} />\r\n          )}\r\n          {selectedStep === 1 && (\r\n            <PersonalInformationMobile\r\n              handleStepBack={handleStepBack}\r\n              selectedAddress={selectedAddress}\r\n              paymentMethod={paymentMethod}\r\n              setPaymentMethod={setPaymentMethod}\r\n              handleCheckout={handleCheckout}\r\n              checkoutLoading={checkoutLoading}\r\n            />\r\n          )}\r\n          {selectedStep === 2 && <OrderPlacedMobile />}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}